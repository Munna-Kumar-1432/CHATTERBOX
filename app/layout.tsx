import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ClerkProvider } from "@clerk/nextjs";
import { ThemeProvider } from "@/components/providers/theme-provider"
import { cn } from "@/lib/utils";
import { NextSSRPlugin } from "@uploadthing/react/next-ssr-plugin";
import { extractRouterConfig } from "uploadthing/server";
import { ourFileRouter } from "./api/uploadthing/core";
import { ModalProvider } from "@/components/providers/model-provider";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider>
      <html lang="en">
        <body
          className={cn(`${geistSans.variable} ${geistMono.variable} antialiased`,'bg-white dark:bg-[#313338]')}
        > <ThemeProvider
        attribute="class"
        defaultTheme="system"
        enableSystem={false}
        storageKey="discrod-theme"
        disableTransitionOnChange
      >
         <NextSSRPlugin
          routerConfig={extractRouterConfig(ourFileRouter)}
        />
        <ModalProvider/>
        {children}
      </ThemeProvider>
        </body>
      </html>
    </ClerkProvider>
  );
}
